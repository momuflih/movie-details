import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './App.css';

const App = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [movies, setMovies] = useState([]);
  const [favorites, setFavorites] = useState([]);

  const API_KEY = 'cdfeed6f'; // Replace with your OMDb API key
  const API_URL = 'http://www.omdbapi.com/?i=tt3896198';

  useEffect(() => {
    // Load favorites from local storage
    const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];
    setFavorites(savedFavorites);
  }, []);

  const handleSearch = async () => {
    if (!searchQuery) return;
    
    try {
      const response = await axios.get(API_URL, {
        params: {
          s: searchQuery,
          apiKey: API_KEY,
        },
      });
      
      if (response.data.Response === 'True') {
        setMovies(response.data.Search);
      } else {
        setMovies([]);
      }
    } catch (error) {
      console.error('Error fetching movie data:', error);
    }
  };

  const handleAddToFavorites = (movie) => {
    // Prevent adding duplicates
    if (!favorites.some(fav => fav.imdbID === movie.imdbID)) {
      const newFavorites = [...favorites, movie];
      setFavorites(newFavorites);
      localStorage.setItem('favorites', JSON.stringify(newFavorites));
    }
  };

  const handleRemoveFromFavorites = (movieID) => {
    const updatedFavorites = favorites.filter(fav => fav.imdbID !== movieID);
    setFavorites(updatedFavorites);
    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));
  };

  return (
    <div className="app-container">
      <h1>Movie Finder</h1>
      
      <div className="search-container">
        <input
          type="text"
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          placeholder="Search for movies"
        />
        <button onClick={handleSearch}>Search</button>
      </div>

      <h2>Search Results</h2>
      <div className="movies-list">
        {movies.length === 0 ? (
          <p>No movies found.</p>
        ) : (
          movies.map(movie => (
            <div key={movie.imdbID} className="movie-card">
              <img src={movie.Poster !== 'N/A' ? movie.Poster : 'https://via.placeholder.com/150'} alt={movie.Title} />
              <h3>{movie.Title}</h3>
              <p>{movie.Year}</p>
              <button onClick={() => handleAddToFavorites(movie)}>
                Add to Favorites
              </button>
            </div>
          ))
        )}
      </div>

      <h2>Favorite Movies</h2>
      <div className="movies-list">
        {favorites.length === 0 ? (
          <p>No favorites added yet.</p>
        ) : (
          favorites.map(movie => (
            <div key={movie.imdbID} className="movie-card">
              <img src={movie.Poster !== 'N/A' ? movie.Poster : 'https://via.placeholder.com/150'} alt={movie.Title} />
              <h3>{movie.Title}</h3>
              <p>{movie.Year}</p>
              <button onClick={() => handleRemoveFromFavorites(movie.imdbID)}>
                Remove from Favorites
              </button>
            </div>
          ))
        )}
      </div>
    </div>
  );
};

export default App;
